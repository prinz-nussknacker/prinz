version: '3.8'

services:

  mlflow:
    build: ./mlflow
    container_name: mlflow-server
    restart: always
    ports:
      - "5000:5000"
      - "1234:1234"
    environment:
      - BACKEND_STORE_URI=postgresql://mlflow:mlflow@postgres-mlflow/mlflow
      - MLFLOW_TRACKING_URI=postgresql://mlflow:mlflow@postgres-mlflow/mlflow
      - ARTIFACT_LOCATION=s3://mlflow
      - MLFLOW_S3_ENDPOINT_URL=http://aws-mlflow:9000
      - AWS_ACCESS_KEY_ID=mlflow-key
      - AWS_SECRET_ACCESS_KEY=mlflow-secret
      - SERVER_PORT=5000
      - MODEL_PORT=1234
      - MLFLOW_WORK_DIR=/home/mlflow
    volumes:
      - ./mlflow/models:/home/mlflow/models
    networks:
      - mlflow-backend
    depends_on:
      - postgres-mlflow
      - aws-mlflow

  postgres-mlflow:
    image: postgres:12-alpine
    container_name: postgres-mlflow
    restart: always
    environment:
      - POSTGRES_DB=mlflow
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
    volumes:
      - ./data/postgres/mlflow/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - mlflow-backend

  aws-mlflow:
    build: ./minio
    container_name: aws-mlflow
    volumes:
      - ./data/minio/mlflow:/mlflow-storage
    environment:
      - MINIO_ACCESS_KEY=mlflow-key
      - MINIO_SECRET_KEY=mlflow-secret
      - BUCKET_NAME=mlflow
      - STORAGE=mlflow-storage
    ports:
      - "9000:9000"
    networks:
      - mlflow-backend

  nussknacker:
    build: ./nussknacker
    container_name: nussknacker
    restart: always
    ports:
      - "3000:3000"
      - "8080:8080"
    networks:
      - mlflow-backend
    environment:
      NUSSKNACKER_CONFIG_FILE: >-
        ${NUSSKNACKER_CONFIG_FILE:-/opt/prinz-sample/prinz-application.conf}

networks:
  mlflow-backend:
    driver: bridge
