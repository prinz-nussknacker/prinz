version: '3.8'

services:

  designer:
    container_name: nussknacker_designer
    image: touk/nussknacker:1.0.0
    ports:
      - "3081:8080"
    environment:
      # multiple, comma separated, config files can be used. They will be merged in order, via HOCON fallback mechanism
      # https://github.com/lightbend/config/blob/master/HOCON.md#config-object-merging-and-file-merging
      CONFIG_FILE: ${NUSSKNACKER_CONFIG_FILE-/opt/nussknacker/conf/application.conf,/opt/nussknacker/conf/prinz.conf}
      JDK_JAVA_OPTIONS: -Xmx256M
      FLINK_REST_URL: http://jobmanager:8081
      FLINK_QUERYABLE_STATE_PROXY_URL: taskmanager:9069
      KAFKA_ADDRESS: kafka:9092
      SCHEMA_REGISTRY_URL: http://schemaregistry:8081
      COUNTS_URL: http://influxdb:8086/query
    volumes:
      - storage_designer:/opt/nussknacker/storage
      # this is needed to be able to verify savepoints during deployments
      - storage_flink:/opt/flink/data
      - ./nussknacker/opt/prinz-sample/prinz.conf:/opt/nussknacker/conf/prinz.conf
      - ./nussknacker/opt/prinz-sample/prinz-sample-assembly-1.2.0-preview-staging-2022-03-14.jar:/opt/prinz-sample/prinz-sample.jar
    networks:
      - dev-bridge-net

  zookeeper:
    container_name: nussknacker_zookeeper
    image: zookeeper:3.5.5
    environment:
      ZOO_MY_ID: 1
      JVMFLAGS: "-Xms64m -Xmx128m"
    volumes:
      - storage_zookeeper_datalog:/datalog
      - storage_zookeeper_data:/data
    networks:
      - dev-bridge-net

  schemaregistry:
    container_name: nussknacker_schemaregistry
    image: confluentinc/cp-schema-registry:5.5.0
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
    ports:
      - "3082:8081"
    depends_on:
      - zookeeper
      - kafka
    # schema registry needs running kafka, depends_on is not enough,
    # so let's restart when schema registry fails...
    restart: on-failure
    networks:
      - dev-bridge-net

  kafka:
    container_name: nussknacker_kafka
    image: wurstmeister/kafka:2.12-2.3.0
    ports:
      - "3032:3032"
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:3032
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:3032
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "processedEvents:1:1"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: -Xms128m -Xmx512m
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - storage_kafka_data:/kafka
    networks:
      - dev-bridge-net
    depends_on:
      - zookeeper

  influxdb:
    container_name: nussknacker_influxdb
    image: influxdb:1.8.4-alpine
    ports:
      - "3086:8086"
    environment:
      INFLUXDB_DB: esp
    volumes:
      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
      - storage_influxdb:/var/lib/influxdb
    networks:
      - dev-bridge-net

  telegraf:
    container_name: nussknacker_telegraf
    image: telegraf:1.14.1-alpine
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
    networks:
      - dev-bridge-net

  jobmanager:
    container_name: nussknacker_jobmanager
    image: flink:1.13.1-scala_2.12-java11
    ports:
      - "3031:8081"
    entrypoint: /flink-entrypoint.sh
    command: jobmanager
    environment:
      # those environment variables are duplicated here and in designer service,
      # in case of setup with designer run in other network than flink
      KAFKA_ADDRESS: kafka:9092
      SCHEMA_REGISTRY_URL: http://schemaregistry:8081
    depends_on:
      - zookeeper
      - kafka
      - influxdb
    volumes:
      - ./flink/flink-conf.yaml:/tmp/flink-conf.yaml
      - ./flink/flink-entrypoint.sh:/flink-entrypoint.sh
    networks:
      - dev-bridge-net

  taskmanager:
    container_name: nussknacker_taskmanager
    image: flink:1.13.1-scala_2.12-java11
    ports:
      - "3063:9069"
      - "9009:9009"
      - "9008:9008"
    entrypoint: /flink-entrypoint.sh
    command: taskmanager
    environment:
      TASK_MANAGER_NUMBER_OF_TASK_SLOTS: 40
    depends_on:
      - zookeeper
      - kafka
      - jobmanager
      - influxdb
    volumes:
      - ./flink/flink-conf.yaml:/tmp/flink-conf.yaml
      - ./flink/flink-entrypoint.sh:/flink-entrypoint.sh
      - storage_flink:/opt/flink/data
    ulimits:
      nproc: 70000
      nofile:
        soft: 70000
        hard: 70000
    networks:
      - dev-bridge-net

networks:
  dev-bridge-net:
    driver: bridge
    external: true

volumes:
  storage_zookeeper_datalog:
    name: nussknacker_storage_zookeeper_datalog
  storage_zookeeper_data:
    name: nussknacker_storage_zookeeper_data
  storage_kafka_data:
    name: nussknacker_storage_kafka_data
  storage_flink:
    name: nussknacker_storage_flink
  storage_influxdb:
    name: nussknacker_storage_influxdb
  storage_designer:
    name: nussknacker_storage_designer
