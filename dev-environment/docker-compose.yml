version: '3.8'

services:

  mlflow:
    build: ./mlflow
    container_name: mlflow-server
    restart: always
    ports:
      - "5000:5000"
      - "1234:1234"
    environment:
      - BACKEND_STORE_URI=postgresql://mlflow:mlflow@postgres-mlflow/mlflow
      - MLFLOW_TRACKING_URI=postgresql://mlflow:mlflow@postgres-mlflow/mlflow
      - ARTIFACT_LOCATION=s3://mlflow
      - MLFLOW_S3_ENDPOINT_URL=http://aws-mlflow:9000
      - AWS_ACCESS_KEY_ID=mlflow-key
      - AWS_SECRET_ACCESS_KEY=mlflow-secret
      - SERVER_PORT=5000
      - MODEL_PORT=1234
      - MLFLOW_WORK_DIR=/home/mlflow
    volumes:
      - './mlflow/models:/home/mlflow/models'
    networks:
      - mlflow-backend
    depends_on:
      - postgres-mlflow
      - aws-mlflow

  postgres-mlflow:
    image: postgres:12-alpine
    container_name: postgres-mlflow
    restart: always
    environment:
      - POSTGRES_DB=mlflow
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
    ports:
      - "5432:5432"
    networks:
      - mlflow-backend

  aws-mlflow:
    container_name: aws-mlflow
    image: minio/minio:latest
    volumes:
      - ./minio/mlflow:/mlflow-storage
    ports:
      - "9000:9000"
    environment:
      - MINIO_ACCESS_KEY=mlflow-key
      - MINIO_SECRET_KEY=mlflow-secret
    networks:
      - mlflow-backend
    entrypoint: sh
    command: -c 'mkdir -p /mlflow-storage/mlflow && /usr/bin/minio server /mlflow-storage'

  nussknacker:
    build: ./nussknacker
    container_name: nussknacker
    restart: always
    ports:
     - "3000:3000"
     - "8080:8080"
    networks:
     - mlflow-backend

networks:
  mlflow-backend:
    driver: bridge
